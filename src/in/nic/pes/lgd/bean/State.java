/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package in.nic.pes.lgd.bean;

//import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.ParamDef;

/**
 * State generated by Pooja
 * @Modified By: Chandan Soni
 */
@Entity
@FilterDef(name="stateFilter",parameters=@ParamDef( name="isactive", type="boolean"))
@Table(name = "state", schema = "public")
public class State implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private StatePK statePK;
	private String stateNameEnglish;
	private String stateNameLocal;
	private String shortName;
	private String aliasEnglish;
	private String aliasLocal;
	private String census2001Code;
	private String census2011Code;
	private char stateOrUt;
    private Integer lrReplaces;
	private Integer lrReplacedby;
    private Integer flagCode;
	/*private Integer mapCode;*/
	private Date effectiveDate;
	private boolean isactive;
	private Date lastupdated;
	private long lastupdatedby;
	private Date createdon;
	private long createdby;
	private Integer slc;
	private String coordinates;
	private Boolean warningflag;
	private String fileLocation;
	private String fileName;
	private Integer minorVersion;
	
	
	
	private Boolean mapupload;
	/**
	 * For Extended Department Functionality.
	 * @author Ripunj on 10-10-2014
	 */
	private Character operation_state;
	private Character operation_extend_flag;
	
	/*Added by Pooja for MarkPesaState on 19-05-2016*/
	private Character isPesa;
	
	@Transient
	public Boolean getMapupload() {
		return mapupload;
	}

	public void setMapupload(Boolean mapupload) {
		this.mapupload = mapupload;
	}
	
	
	/*private Set<District> districts = new HashSet<District>(0);*/
	//private Set<Organization> organization=new HashSet<Organization>(0);
	
	/*private Set<ConfigurationGovernmentOrder> configurationGovernmentOrders = new HashSet<ConfigurationGovernmentOrder>(
			0);*/

	//private Set<ConfigurationMapConstituency> configurationMapConstituencies = new HashSet<ConfigurationMapConstituency>(0);

	



	/*private Set<ConfigurationMapLandregion> configurationMapLandregions = new HashSet<ConfigurationMapLandregion>(
			0);*/
	//private Set<LocalBodySetup> localBodySetup = new HashSet<LocalBodySetup>(0);
	//private Set<NomenclatureSubdistrict> nomenclatureSubdistrict = new HashSet<NomenclatureSubdistrict>(0);
	private Set<ConfigurationSubdistrict> configurationSubdistrict = new HashSet<ConfigurationSubdistrict>(0);
	private int stateCode;
	private int stateVersion;
// TODO Remove unused code found by UCDetector
// 	public State(StatePK statePK, String stateNameEnglish,
// 			String stateNameLocal, String shortName, String aliasEnglish,
// 			String aliasLocal, String census2001Code, Integer census2011Code,
// 			char stateOrUt, Integer lrReplaces, Integer lrReplacedby,
// 			Integer flagCode, Integer mapCode, Date effectiveDate,
// 			boolean isactive, Date lastupdated, long lastupdatedby,
// 			Date createdon, long createdby, 
// 			int stateCode, int stateVersion,int slc) {
// 		super();
// 		this.statePK = statePK;
// 		this.stateNameEnglish = stateNameEnglish;
// 		this.stateNameLocal = stateNameLocal;
// 		this.shortName = shortName;
// 		this.aliasEnglish = aliasEnglish;
// 		this.aliasLocal = aliasLocal;
// 		this.census2001Code = census2001Code;
// 		this.census2011Code = census2011Code;
// 		this.stateOrUt = stateOrUt;
// 		this.lrReplaces = lrReplaces;
// 		this.lrReplacedby = lrReplacedby;
// 		this.flagCode = flagCode;
// 		this.mapCode = mapCode;
// 		this.effectiveDate = effectiveDate;
// 		this.isactive = isactive;
// 		this.lastupdated = lastupdated;
// 		this.lastupdatedby = lastupdatedby;
// 		this.createdon = createdon;
// 		this.createdby = createdby;
// 		//this.districts = districts;
// 		this.stateCode = stateCode;
// 		this.stateVersion = stateVersion;
// 		this.slc=slc;
// 	}

// TODO Remove unused code found by UCDetector
// 	public State(int stateCode,String stateNameEnglish,String stateNameLocal)
// 	{
// 		super();
// 		this.stateCode=stateCode;
// 		this.stateNameEnglish = stateNameEnglish;
// 		this.stateNameLocal = stateNameLocal;
// 	}
	
// TODO Remove unused code found by UCDetector
// 	public State(int stateCode,String stateNameEnglish,String stateNameLocal, Boolean mapupload ){
// 		super();
// 		this.stateCode=stateCode;
// 		this.stateNameEnglish = stateNameEnglish;
// 		this.stateNameLocal = stateNameLocal;
// 		this.mapupload = mapupload;
// 	}
	
    
    @Column(name = "lr_replaces")
	public Integer getLrReplaces() {
		return lrReplaces;
	}
   
	public void setLrReplaces(Integer lrReplaces) {
		this.lrReplaces = lrReplaces;
	}
    @Column(name = "lr_replacedby")
	public Integer getLrReplacedby() {
		return lrReplacedby;
	}

	public void setLrReplacedby(Integer lrReplacedby) {
		this.lrReplacedby = lrReplacedby;
	}
	
    @Column(name = "flag_code")
	public Integer getFlagCode() {
		return flagCode;
	}

	public void setFlagCode(Integer flagCode) {
		this.flagCode = flagCode;
	}

	/*@Column(name = "map_attachment_code")
	public Integer getMapCode() {
		return mapCode;
	}

	public void setMapCode(Integer mapCode) {
		this.mapCode = mapCode;
	}*/

	

	public State() {
	}

// TODO Remove unused code found by UCDetector
// 	public State(StatePK statePK, String stateNameEnglish, String shortName,
// 			char stateOrUt, Date effectiveDate, boolean isactive,
// 			Date lastupdated, long lastupdatedby, Date createdon, long createdby) {
// 		this.statePK = statePK;
// 		this.stateNameEnglish = stateNameEnglish;
// 		this.shortName = shortName;
// 		this.stateOrUt = stateOrUt;
// 		this.effectiveDate = effectiveDate;
// 		this.isactive = isactive;
// 		this.lastupdated = lastupdated;
// 		this.lastupdatedby = lastupdatedby;
// 		this.createdon = createdon;
// 		this.createdby = createdby;
// 	}



// TODO Remove unused code found by UCDetector
// 	public State(int stateCode, int stateVersion) {
// 		this.statePK = new StatePK(stateCode, stateVersion);
// 	}

	

	public State(int stateCode2) {
		// TODO Auto-generated constructor stub
	}



	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "stateCode", column = @Column(name = "state_code", nullable = false)),
			@AttributeOverride(name = "stateVersion", column = @Column(name = "state_version", nullable = false)),
			@AttributeOverride(name = "minorVersion", column = @Column(name = "minor_version", nullable = false))
	})
	public StatePK getStatePK() {
		return this.statePK;
	}

	public void setStatePK(StatePK statePK) {
		this.statePK = statePK;
	}

	@Column(name = "state_name_english", nullable = false, length = 50)
	//@NotBlank(message = "Password Approaching Expiry Alerts is not entered.")

	public String getStateNameEnglish() {
		return this.stateNameEnglish;
	}

	public void setStateNameEnglish(String stateNameEnglish) {
		this.stateNameEnglish = stateNameEnglish;
	}

	@Column(name = "state_name_local", length = 50)
	public String getStateNameLocal() {
		return this.stateNameLocal;
	}

	public void setStateNameLocal(String stateNameLocal) {
		this.stateNameLocal = stateNameLocal;
	}

	@Column(name = "short_name", length = 2)
	public String getShortName() {
		return this.shortName;
	}

	public void setShortName(String shortName) {
		this.shortName = shortName;
	}

	@Column(name = "alias_english", length = 50)
	public String getAliasEnglish() {
		return this.aliasEnglish;
	}

	public void setAliasEnglish(String aliasEnglish) {
		this.aliasEnglish = aliasEnglish;
	}

	@Column(name = "alias_local", length = 50)
	public String getAliasLocal() {
		return this.aliasLocal;
	}

	public void setAliasLocal(String aliasLocal) {
		this.aliasLocal = aliasLocal;
	}

	@Column(name = "census_2001_code", length = 2)
	public String getCensus2001Code() {
		return this.census2001Code;
	}

	public void setCensus2001Code(String census2001Code) {
		this.census2001Code = census2001Code;
	}

	@Column(name = "census_2011_code")
	public String getCensus2011Code() {
		return this.census2011Code;
	}

	public void setCensus2011Code(String census2011Code) {
		this.census2011Code = census2011Code;
	}

	@Column(name = "state_or_ut", nullable = false, length = 1)
	public char getStateOrUt() {
		return this.stateOrUt;
	}

	public void setStateOrUt(char stateOrUt) {
		this.stateOrUt = stateOrUt;
	}

	/*
	 * @Column(name = "map_code") public Integer getMapCode() { return
	 * this.mapCode; }
	 * 
	 * public void setMapCode(Integer mapCode) { this.mapCode = mapCode; }
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Basic(optional = false)
	@Column(name = "effective_date", nullable = false, length = 35)
	public Date getEffectiveDate() {
		return this.effectiveDate;
	}

	public void setEffectiveDate(Date effectiveDate) {
		this.effectiveDate = effectiveDate;
	}

	@Column(name = "isactive", nullable = false)
	public boolean isIsactive() {
		return this.isactive;
	}

	public void setIsactive(boolean isactive) {
		this.isactive = isactive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastupdated", nullable = false, length = 35)
	public Date getLastupdated() {
		return this.lastupdated;
	}

	public void setLastupdated(Date lastupdated) {
		this.lastupdated = lastupdated;
	}

	@Column(name = "lastupdatedby")
	public long getLastupdatedby() {
		return this.lastupdatedby;
	}

	public void setLastupdatedby(long lastupdatedby) {
		this.lastupdatedby = lastupdatedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Basic(optional = false)
	@Column(name = "createdon", nullable = false, length = 35)
	public Date getCreatedon() {
		return this.createdon;
	}

	public void setCreatedon(Date createdon) {
		this.createdon = createdon;
	}

	@Basic(optional = false)
	@Column(name = "createdby", nullable = false)
	public long getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(long createdby) {
		this.createdby = createdby;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")
	@Filter(name = "districtFilter",condition="isactive = :isactive")
	public Set<District> getDistricts() {
		return this.districts;
	}

	public void setDistricts(Set<District> districts) {
		this.districts = districts;
	}*/
	
	   @Column(name = "state_code",insertable=false,updatable=false)
	   public int getStateCode() {
		return stateCode;
	}

	public void setStateCode(int stateCode) {
		this.stateCode = stateCode;
	}
	@Column(name = "state_version",insertable=false,updatable=false)
	public int getStateVersion() {
		return stateVersion;
	}

	public void setStateVersion(int stateVersion) {
		this.stateVersion = stateVersion;
	}

/*	@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")	
	public Set<ConfigurationGovernmentOrder> getConfigurationGovernmentOrders() {
		return this.configurationGovernmentOrders;
	}

	public void setConfigurationGovernmentOrders(
			Set<ConfigurationGovernmentOrder> configurationGovernmentOrders) {
		this.configurationGovernmentOrders = configurationGovernmentOrders;
	}*/

	

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")
	public Set<ConfigurationMapConstituency> getConfigurationMapConstituencies() {
		return this.configurationMapConstituencies;
	}

	public void setConfigurationMapConstituencies(
			Set<ConfigurationMapConstituency> configurationMapConstituencies) {
		this.configurationMapConstituencies = configurationMapConstituencies;
	}*/

/*	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")	
	public Set<ConfigurationMapLandregion> getConfigurationMapLandregions() {
		return this.configurationMapLandregions;
	}

	public void setConfigurationMapLandregions(
			Set<ConfigurationMapLandregion> configurationMapLandregions) {
		this.configurationMapLandregions = configurationMapLandregions;
	}*/

	/**
	 * @return the localBodySetup
	 */
	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")	
	public Set<LocalBodySetup> getLocalBodySetup() {
		return localBodySetup;
	}*/
	/**
	 * @param localBodySetup the localBodySetup to set
	 */
	/*public void setLocalBodySetup(Set<LocalBodySetup> localBodySetup) {
		this.localBodySetup = localBodySetup;
	}*/



	/**
	 * @return the nomenclatureSubdistrict
	 */
	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")
	@Where(clause= "isactive = true")
	public Set<NomenclatureSubdistrict> getNomenclatureSubdistrict() {
		return nomenclatureSubdistrict;
	}



	*//**
	 * @param nomenclatureSubdistrict the nomenclatureSubdistrict to set
	 *//*
	public void setNomenclatureSubdistrict(Set<NomenclatureSubdistrict> nomenclatureSubdistrict) {
		this.nomenclatureSubdistrict = nomenclatureSubdistrict;
	}
*/


	/**
	 * @return the configurationSubdistrict
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")	
	public Set<ConfigurationSubdistrict> getConfigurationSubdistrict() {
		return configurationSubdistrict;
	}



	/**
	 * @param configurationSubdistrict the configurationSubdistrict to set
	 */
	public void setConfigurationSubdistrict(Set<ConfigurationSubdistrict> configurationSubdistrict) {
		this.configurationSubdistrict = configurationSubdistrict;
	}


	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")	
	public Set<Organization> getOrganization() {
		return organization;
	}



	public void setOrganization(Set<Organization> organization) {
		this.organization = organization;
	}*/


	@Column(name = "slc",insertable=false,updatable=false)
	public Integer getSlc() {
		return slc;
	}



	public void setSlc(Integer slc) {
		this.slc = slc;
	}


	@Column(name = "coordinates")
	public String getCoordinates() {
		return coordinates;
	}



	public void setCoordinates(String coordinates) {
		this.coordinates = coordinates;
	}


	@Column(name = "warningflag")
	public Boolean getWarningflag() {
		return warningflag;
	}

	public void setWarningflag(Boolean warningflag) {
		this.warningflag = warningflag;
	}
	
	@Transient
	public Character getOperation_state() {
		return operation_state;
	}

	public void setOperation_state(Character operation_state) {
		this.operation_state = operation_state;
	}
	@Transient
	public Character getOperation_extend_flag() {
		return operation_extend_flag;
	}

	public void setOperation_extend_flag(Character operation_extend_flag) {
		this.operation_extend_flag = operation_extend_flag;
	}

	@Transient	
	public String getFileLocation() {
		return fileLocation;
	}

	public void setFileLocation(String fileLocation) {
		this.fileLocation = fileLocation;
	}
	
	@Transient	
	public String getFileName() {
		return fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	@Column(name = "is_pesa")
	public Character getIsPesa() {
		return isPesa;
	}

	public void setIsPesa(Character isPesa) {
		this.isPesa = isPesa;
	}

	
	
	@Column(name = "minor_version",insertable=false,updatable=false)
	public Integer getMinorVersion() {
		return minorVersion;
	}

	public void setMinorVersion(Integer minorVersion) {
		this.minorVersion = minorVersion;
	}

}
