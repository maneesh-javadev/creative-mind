<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    id="WebApp_ID" version="2.5">
    <display-name>LGD</display-name>
    
    
    
    <listener>
      <listener-class>in.nic.pes.lgd.interceptor.LanguageListener</listener-class>
     </listener> 
  
    
     <listener>
     
  <listener-class>in.nic.pes.common.listener.SessionListener</listener-class>
  </listener>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <context-param>
           <param-name>URL</param-name>
        <param-value>http://localhost:8080/LGD</param-value>
      </context-param>    
                 
    <context-param>
        <param-name>CasURL</param-name>
        <param-value>https://localhost:8080/cas-server/logout?service=http://localhost:8080/LGD</param-value>
     </context-param>
    
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.xml</param-value>
    </context-param>

    <context-param>
         <param-name>defaultHtmlEscape</param-name>
         <param-value>true</param-value>
     </context-param>
      
     <!-- added by Shantnu start -->
    <context-param>
    <param-name>log4jExposeWebAppRoot</param-name>
    <param-value>false</param-value>
    </context-param>


    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml,
                     /WEB-INF/lb-config/drools-config.xml
        </param-value>
    </context-param>
    
    <!-- added by Shantnu end -->

    <servlet>
        <servlet-name>lgd</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>lgd</servlet-name>
        <url-pattern>*.htm</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>lgd</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>
    
    <filter>
        <filter-name>encoding-filter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encoding-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- START-->

     <!-- Commented due to occurance of Error -->
    <!-- <filter>
        <filter-name>pesGzipFilter</filter-name>
        <filter-class>in.nic.pes.common.filter.PesGzipFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>pesGzipFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->
    <!-- END -->

	<!--- for filterign requests of web services, only whitelisted IPs are allowed 05 July 2018-->
         <filter>
         <filter-name>RemoteAddrFilter</filter-name>
         <filter-class>in.nic.pes.common.interceptor.RemoteAddrFilter</filter-class>
    </filter>
   
     <filter-mapping>
        <filter-name>RemoteAddrFilter</filter-name>
        <url-pattern>/webservice/lgdws/*</url-pattern>
   </filter-mapping> 
    <!---  End of web service filtering -->



    <filter>
    <filter-name>AcrossApplicationAccessFilter</filter-name>
    <filter-class>in.nic.pes.common.filter.AcrossApplicationAccessFilter</filter-class>
        
        
        <init-param>
            <param-name>config</param-name> 
            <param-value>AcrossApplicationAccess</param-value>
        </init-param>
        
    </filter>
    
    <filter-mapping>
        <filter-name>AcrossApplicationAccessFilter</filter-name>
        <url-pattern>*.htm</url-pattern>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    
    <filter>        
      <filter-name>AnnotationFilter</filter-name>
      <filter-class>com.org.ep.filter.AnnotationFilter</filter-class>
      <init-param>
           <param-name>context</param-name>
           <param-value>label.lgd</param-value>
        </init-param>    
   </filter>    
   <filter-mapping>    
        <filter-name>AnnotationFilter</filter-name>    
          <url-pattern>*.htm</url-pattern>
          <url-pattern>*.do</url-pattern>
   </filter-mapping> 
    
    <welcome-file-list>
        <welcome-file>welcome.htm</welcome-file>
    </welcome-file-list>
    
    <!-- No-Cache filter START -->
    <filter>
        <filter-name>noCacheFilter</filter-name>
        <filter-class>in.nic.pes.lgd.common.NoCacheFilter</filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>noCacheFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- No-Cache filter END -->
    <!-- Filter for cors -->
 	<filter>
        <filter-name>cors</filter-name>
        <filter-class>in.nic.pes.lgd.common.SimpleCORSFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>cors</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
   <!--end of  Filter for cors -->
    
    
    
    <servlet>
        <servlet-name>ConnectorServlet</servlet-name>
        <servlet-class>net.fckeditor.connector.ConnectorServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>ConnectorServlet</servlet-name>
        <!-- Do not wrap this line otherwise Glassfish will fail to load this file -->
        <url-pattern>/fckeditor/editor/filemanager/connectors/*</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>dwr</servlet-name>
        <servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
        <init-param>
            <param-name>debug</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>activeReverseAjaxEnabled</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>crossDomainSessionSecurity</param-name>
            <param-value>false</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>dwr</servlet-name>
        <url-pattern>/dwr/*</url-pattern>
    </servlet-mapping>
    
    
    <!--  Start of Filter For DWR Bad Request Filter -->
    <filter>
        <display-name>DWRRequestFilter</display-name>
        <filter-name>DWRRequestFilter</filter-name>
        <filter-class>in.nic.pes.lgd.common.DWRRequestFilter</filter-class>
      </filter>
      <filter-mapping>
        <filter-name>DWRRequestFilter</filter-name>
            <url-pattern>/dwr/*</url-pattern>
     </filter-mapping>    
    <!--  End of Filter For DWR Bad Request Filter -->

    
    
    <!-- <error-page>
        <error-code>400</error-code>
        <location>/WEB-INF/jsp/common/errorRedirect.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/jsp/common/errorRedirect.jsp</location>
    </error-page>
    <error-page>
        <error-code>405</error-code>
        <location>/WEB-INF/jsp/common/errorRedirect.jsp</location>
    </error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/WEB-INF/jsp/common/errorRedirect.jsp</location>
    </error-page>

    <error-page>
        <error-code>501</error-code>
        <location>/WEB-INF/jsp/common/errorRedirect.jsp</location>
    </error-page>
    
    <error-page>
        <error-code>503</error-code>
        <location>/WEB-INF/jsp/common/errorRedirect.jsp</location>
    </error-page>
    
    <error-page>
        <error-code>226</error-code>
        <location>/WEB-INF/jsp/common/badRequest.jsp</location>
    </error-page>
    
    <error-page>
        <error-code>403</error-code>
        <location>/WEB-INF/jsp/common/badRequest.jsp</location>
    </error-page> -->

    <!-- User Filter   START -->
    <!-- <filter>
          <filter-name>UserFilter    </filter-name>
        <filter-class>in.nic.pes.lgd.interceptor.UserFilter</filter-class>
    </filter>
    <filter-mapping>    
        <filter-name>UserFilter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping> -->
    <!-- User Filter   END -->

     
      
    <!-- <filter>
        <filter-name>SetCharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
        <param-name>encoding</param-name>
        <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
        <param-name>forceEncoding</param-name>
        <param-value>true</param-value>
        </init-param>
    </filter>
        
    <filter-mapping>
        <filter-name>SetCharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->
    
    
    <filter>
         <filter-name>AuthenticationFilter</filter-name>
         <filter-class>in.nic.pes.lgd.common.AuthenticationFilter</filter-class>
         <init-param>
             <param-name>Redirect-Page</param-name>
             <param-value>infringement</param-value>
         </init-param>
    </filter>
 
    
     <filter-mapping>
         <filter-name>AuthenticationFilter</filter-name>
          <url-pattern>*.htm</url-pattern> 
     </filter-mapping>
     
     <filter>
         <filter-name>IlligalExtension</filter-name>
         <filter-class>in.nic.pes.lgd.common.IllegalExtension</filter-class>
         <init-param>
             <param-name>Redirect-Page</param-name>
             <param-value>infringement</param-value>
         </init-param>
    </filter>
 
    
     <filter-mapping>
         <filter-name>IlligalExtension</filter-name>
         <!-- <url-pattern>*.do</url-pattern> -->
         <url-pattern>*.php</url-pattern>
         <url-pattern>*.asp</url-pattern>
         <url-pattern>*.aspx</url-pattern>
         <!-- <url-pattern>*.html</url-pattern> -->
     </filter-mapping> 
    
    <resource-ref>      
            <description>DB Connection</description>     
           <res-ref-name>jdbc/exHl</res-ref-name>     
           <res-type>javax.sql.DataSource</res-type>     
           <res-auth>Container</res-auth>     
   </resource-ref>

   <resource-ref>
        <description>DB Connection</description>
        <res-ref-name>jdbc/switchunit</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    
    <!-- <resource-ref>
        <description>DB Connection</description>
        <res-ref-name>jdbc/email</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref> -->
    
  <!-- start of UsageLogFilter (Audit trail) -->

   <filter>
    <filter-name>UsageLogFilter</filter-name>
        <filter-class>in.nic.pes.lgd.common.UsageLogFilter</filter-class>
        <init-param>
           <param-name>context</param-name>
           <param-value>label.lgd</param-value>
        </init-param>
    </filter>
    
    <filter-mapping>
        <filter-name>UsageLogFilter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping> 
   
  <!-- end of UsageLogFilter (Audit trail) -->
 
<!-- captcha implementation tags started-->
    <!-- CAPTCHA -->
    <servlet>
        <init-param>
            <param-name>width</param-name>
            <param-value>250</param-value>
        </init-param>
        <init-param>
            <param-name>height</param-name>
            <param-value>80</param-value>
        </init-param>
        <servlet-name>SimpleCaptcha</servlet-name>
              <servlet-class>in.nic.pes.lgd.utils.Captcha</servlet-class>
         <!-- <servlet-class>nl.captcha.servlet.SimpleCaptchaServlet</servlet-class>  -->

     <!-- CAPTCHA config - The width and height params are optional; if unspecified they default to 200 and 50 respectively. -->
        
    </servlet>
    <servlet-mapping>
        <servlet-name>SimpleCaptcha</servlet-name>
        <url-pattern>/captchaImage</url-pattern>
    </servlet-mapping>

    <!-- captcha implementation tags ends-->
      
      
      
      <!-- ==================  CAS Filters start  ================== -->
      
      
    <!-- // localhost // UnComment below filter section for 'localhost' CAS server integration with PES user. Comment for local user testing  --> 
   
     <!-- <filter> 
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
    </filter>
    <filter>
        <filter-name>CAS Assertion Thread Local Filter</filter-name>
        <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>
 
     <filter-mapping> 
        <filter-name>CAS Authentication Filter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CAS Validation Filter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>   -->

    <!-- // localhost // CAS Filter end  -->      

    
    <!-- ==================  CAS Filters start  Node7  ================== -->
    
    <!--  <filter>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>
    <filter>
        <filter-name>CAS Authentication Filter</filter-name>
        <filter-class>in.nic.pes.common.interceptor.AuthenticationFilter</filter-class>        
        <init-param>
            <param-name>casServerLoginUrl</param-name>
           
            <param-value>https://pes/cas-server/login</param-value>
        </init-param>
        <init-param> 
            <param-name>serverName</param-name> 
            <param-value>http://10.248.213.221:8080</param-value>
        </init-param> 
    </filter>
    <filter>
      <filter-name>CAS Validation Filter</filter-name>
      <filter-class>org.jasig.cas.client.validation.Saml11TicketValidationFilter</filter-class>
        <init-param>
            <param-name>casServerUrlPrefix</param-name>
            <param-value>https://pes/cas-server</param-value>
        </init-param>
        <init-param> 
            <param-name>serverName</param-name> 
            <param-value>http://10.248.213.221:8080</param-value>
        </init-param> 
        <init-param> 
            <param-name>redirectAfterValidation</param-name> 
            <param-value>true</param-value> 
        </init-param> 
        <init-param>
            <param-name>tolerance</param-name>
            <param-value>500000000</param-value>
        </init-param>
    </filter>
    <filter>
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
    </filter>
    <filter> 
        <filter-name>CAS Assertion Thread Local Filter</filter-name> 
        <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class> 
    </filter>

    <filter-mapping>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CAS Authentication Filter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CAS Validation Filter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CAS Assertion Thread Local Filter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>  -->
    
        <!-- ==================  CAS Filters end  Node7  ================== -->
    
    <!--   Start of MultiPart Filter   -->
    <!-- <filter>
        <filter-name>multipartFilter</filter-name>
        <filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
    </filter>
        <filter-mapping>
            <filter-name>multipartFilter</filter-name>
            <url-pattern>/*</url-pattern>
        </filter-mapping>
    <filter>
        <filter-name>httpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>httpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
 -->
    <!--   End of MultiPart Filter   -->    
    
   <!--  start of  CSRF gaurd  -->
  
  <context-param>
        <param-name>Owasp.CsrfGuard.Config</param-name>
        <param-value>WEB-INF/Owasp.CsrfGuard.properties</param-value>
    </context-param>
    
    <context-param>
        <param-name>Owasp.CsrfGuard.Config.Print</param-name>
        <param-value>true</param-value>
    </context-param>
    
  
    <listener>
        <listener-class>org.owasp.csrfguard.CsrfGuardServletContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.owasp.csrfguard.CsrfGuardHttpSessionListener</listener-class>
    </listener>
    
    <filter>
        <filter-name>CSRFGuard</filter-name>
        <filter-class>org.owasp.csrfguard.CsrfGuardFilter</filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>CSRFGuard</filter-name>
        <url-pattern>*.htm</url-pattern>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    
    
    
    <!-- CBT -->
    <!-- Filter for Help -->
    <filter>

    <filter-name>HelpFilter</filter-name>
    <filter-class>in.nic.pes.lgd.help.HelpFilter</filter-class>
    <init-param>
        <param-name>helpfile</param-name>
        <param-value>help.xml</param-value>
    </init-param>

      </filter>

    <filter-mapping>
        <filter-name>HelpFilter</filter-name>
        <url-pattern>*.html</url-pattern>
        <url-pattern>*.htm</url-pattern>
        <url-pattern>*.do</url-pattern>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <!-- Filter for Help -->

    

  <!-- Authenticate user Filter for single sign on -->
        
    <filter>
        <filter-name>AUthenticatUserFilter</filter-name>
        <filter-class>in.nic.pes.common.interceptor.AUthenticatUserFilter</filter-class>
    </filter> 
    <filter-mapping>
        <filter-name>AUthenticatUserFilter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>
    <!-- Authenticate user Filter for single sign on -->

  <!-- end of  CSRF gaurd -->
    
    <servlet>
        <servlet-name>JavaScriptServlet</servlet-name>
        <servlet-class>org.owasp.csrfguard.servlet.JavaScriptServlet</servlet-class>
        <init-param>
            <param-name>source-file</param-name>
            <param-value>WEB-INF/Owasp.CsrfGuard.js</param-value>
        </init-param>
        <init-param>
            <param-name>inject-into-forms</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>inject-into-attributes</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>domain-strict</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>referer-pattern</param-name>
            <param-value>http://localhost:8080.*</param-value>
        </init-param>
        <init-param>
            <param-name>x-requested-with</param-name>
            <param-value>OWASP CSRFGuard Project</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>JavaScriptServlet</servlet-name>
        <url-pattern>/JavaScriptServlet</url-pattern>
    </servlet-mapping>
    


  <!-- end of  CSRF gaurd -->
<jsp-config>
        <taglib>
            <taglib-uri>/esapi</taglib-uri>
            <taglib-location>/WEB-INF/tld/esapi.tld</taglib-location>
        </taglib>
        <taglib>
			<taglib-uri>/birt.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/birt.tld</taglib-location>
		</taglib>
    </jsp-config>
     <security-constraint>
        <display-name>Unauthorized Access</display-name>
        <web-resource-collection>
            <web-resource-name>No Access</web-resource-name>
            <url-pattern>/dwr/call/plaincall/*</url-pattern>
            <http-method>GET</http-method>
        </web-resource-collection>
        <auth-constraint />
        <user-data-constraint>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
  
<!-- Start Image Writer File Manager-->
    <servlet>
        <servlet-name>imgwrite</servlet-name>
        <servlet-class>com.editor.fileupload.servlet.image.ImageWriter</servlet-class>
        <load-on-startup>0</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>imgwrite</servlet-name>
        <url-pattern>/imgwrite</url-pattern>
    </servlet-mapping>
<!-- Image Writer File Manager Ends-->  

<!-- Start of resteasy -->
     <context-param>
        <!-- <param-name>resteasy.scan</param-name>
        <param-value>true</param-value> -->
        <param-name>resteasy.resources</param-name>
        <!-- <param-value>com.org.ep.actionsoft.service.PlanplusActionSoftNADWebServiceImpl</param-value> -->
        <param-value>ws.in.nic.pes.lgdws.webservice.LGDWebService,ws.in.nic.pes.lgdws.webservice.LGDWebDocument</param-value>
     </context-param>
 
    <!-- this need same with resteasy servlet url-pattern -->
    <context-param>
        <param-name>resteasy.servlet.mapping.prefix</param-name>
        <param-value>/webservice</param-value>
    </context-param>
 
    <listener>
        <listener-class>org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap</listener-class>
    </listener>
    
     <listener>
       <listener-class>org.jboss.resteasy.plugins.spring.SpringContextLoaderListener</listener-class>
    </listener> 
 
    <servlet>
        <servlet-name>rest</servlet-name>
        <servlet-class>
            org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher
        </servlet-class>
    </servlet>
 
    <servlet-mapping>
        <servlet-name>rest</servlet-name>
        <url-pattern>/webservice/*</url-pattern>
    </servlet-mapping>
 <!-- End of resteasy -->  

</web-app>